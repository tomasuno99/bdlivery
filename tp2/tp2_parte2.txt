5) creo la bd airbdb con el comando "use airbdb", luego creo la coleccion apartments y agrego un documento ejecutando el comando "db.apartments.insert({name:'Apartment with 2 beedrooms', capacity:4}).
Recupero la informacion del departamento con "db.apartments.find().pretty()", se puede ver que devuelve un documento con los atributos definidos anteriormente, y ademas un id ("_id") que se genera automaticamente

6) departamentos con capidad para 3 personas: db.apartments.find({capacity: 3}).pretty()

departamentos con capacidad para 4 personas o mas: db.apartments.find({capacity: {$gt:3} }).pretty()

departamentos con wifi: db.apartments.find({services: 'wifi'}).pretty()

departamentos que incluyan la palabra 'Apartment' en su nombre: db.apartments.find({name: /Apartment/ }).pretty()

departamentos con la palabra Apartment en su nombre y capacidad para mas de 3 personas: db.apartments.find({name: /Apartment/, capacity: {$gt: 3} }).pretty()

departamentos sin servicios (es decir, que el atributo este ausente): db.apartments.find({services: {$exists: false} }).pretty()

última consulta pero proyecte sólo el nombre del departamento en los resultados, omitiendo incluso el atributo _id de la proyección: db.apartments.find({services: {$exists: false}}, {name: 1, _id: 0}).pretty()

7) Actualize el Duplex floor asignandole capacidad 5: db.apartments.updateOne({name: 'Duplex Floor'}, {$set: {capacity:5}})

8) agregue "laundry" al listado de services del "Nice apt for 6": db.apartments.updateOne({name: 'Nice apt for 6'}, {$push: {services: 'laundry' }})

9) agregue una paersona de capacidad a todos los departamentos con wifi: db.apartments.updateMany({services: 'wifi'}, {$inc: {capacity:1}})

10)